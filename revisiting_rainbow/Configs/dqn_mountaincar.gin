import dopamine.discrete_domains.gym_lib
import dopamine.jax.networks
import dopamine.discrete_domains.run_experiment
import dopamine.jax.agents.dqn.dqn_agent
import dopamine.replay_memory.circular_replay_buffer

import networks_new
import dqn_agent_new

JaxDQNAgent.observation_shape = (2,1)
JaxDQNAgent.observation_dtype = %jax_networks.MOUNTAINCAR_OBSERVATION_DTYPE
JaxDQNAgent.stack_size = 1

JaxDQNAgent.gamma = 0.99
JaxDQNAgent.update_horizon = 1
JaxDQNAgent.min_replay_history = 500
JaxDQNAgent.update_period = 4
JaxDQNAgent.target_update_period = 100

JaxDQNAgentNew.optimizer = 'adam'
JaxDQNAgentNew.net_conf = 'classic'
JaxDQNAgentNew.env = 'MountainCar'
JaxDQNAgentNew.normalize_obs = True
JaxDQNAgentNew.hidden_layer = 2
JaxDQNAgentNew.neurons = 512
JaxDQNAgentNew.prioritized = False
JaxDQNAgentNew.target_opt = 0 #0:DQN 1:Double DQN 2:Munchausen DQN
JaxDQNAgentNew.mse_inf = False
JaxDQNAgentNew.noisy = False
JaxDQNAgentNew.dueling = False
JaxDQNAgentNew.network = @networks_new.DQNNetwork
JaxDQNAgentNew.epsilon_fn = @dqn_agent.identity_epsilon
JaxDQNAgentNew.tau = 0.03
JaxDQNAgentNew.alpha = 0.9 
JaxDQNAgentNew.clip_value_min = -1

create_optimizer = @dqn_agent.create_optimizer
create_optimizer.learning_rate = 0.01
create_optimizer.eps = 3.125e-4

create_gym_environment.environment_name = 'MountainCar'
create_gym_environment.version = 'v0'

TrainRunner.create_environment_fn = @gym_lib.create_gym_environment
Runner.num_iterations = 30
Runner.training_steps = 1000
Runner.max_steps_per_episode = 600  # Default max episode length.

OutOfGraphReplayBuffer.replay_capacity = 50000
OutOfGraphReplayBuffer.batch_size = 128
