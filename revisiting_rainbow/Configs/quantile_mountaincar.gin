import dopamine.jax.agents.dqn.dqn_agent
import dopamine.jax.networks
import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.discrete_domains.run_experiment
import dopamine.replay_memory.prioritized_replay_buffer

import networks_new
import quantile_agent_new

JaxDQNAgent.observation_shape = %gym_lib.MOUNTAINCAR_OBSERVATION_SHAPE
JaxDQNAgent.observation_dtype = %jax_networks.MOUNTAINCAR_OBSERVATION_DTYPE
JaxDQNAgent.stack_size = %gym_lib.MOUNTAINCAR_STACK_SIZE
JaxDQNAgent.gamma = 0.99
JaxDQNAgent.update_horizon = 1
JaxDQNAgent.min_replay_history = 500 # agent steps
JaxDQNAgent.update_period = 2
JaxDQNAgent.target_update_period = 100 # agent steps

JaxQuantileAgentNew.optimizer = 'adam'
JaxQuantileAgentNew.kappa = 1.0
JaxQuantileAgentNew.num_atoms = 51
JaxQuantileAgentNew.net_conf = 'classic'
JaxQuantileAgentNew.env = 'MountainCar'
JaxQuantileAgentNew.normalize_obs = True
JaxQuantileAgentNew.hidden_layer = 2
JaxQuantileAgentNew.neurons = 512
JaxQuantileAgentNew.double_dqn = False
JaxQuantileAgentNew.noisy = False
JaxQuantileAgentNew.dueling = False
JaxQuantileAgentNew.initzer = 'variance_scaling'#'xavier_uniform'
JaxQuantileAgentNew.replay_scheme = 'uniform' #'prioritized'
JaxQuantileAgentNew.network  = @networks_new.QuantileNetwork 
JaxQuantileAgentNew.epsilon_fn = @dqn_agent.identity_epsilon

create_optimizer.learning_rate = 0.0001
create_optimizer.eps = 0.0003125

create_gym_environment.environment_name = 'MountainCar'
create_gym_environment.version = 'v0'

TrainRunner.create_environment_fn = @gym_lib.create_gym_environment
Runner.num_iterations = 30
Runner.training_steps = 1000
Runner.max_steps_per_episode = 600

OutOfGraphPrioritizedReplayBuffer.replay_capacity = 50000
OutOfGraphPrioritizedReplayBuffer.batch_size = 128
