import dopamine.jax.agents.dqn.dqn_agent
import dopamine.jax.networks
import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.replay_memory.prioritized_replay_buffer

import networks_new
import rainbow_agent_new

JaxDQNAgent.observation_shape = %gym_lib.ACROBOT_OBSERVATION_SHAPE
JaxDQNAgent.observation_dtype = %jax_networks.ACROBOT_OBSERVATION_DTYPE
JaxDQNAgent.stack_size = %gym_lib.ACROBOT_STACK_SIZE

JaxDQNAgent.gamma = 0.99
JaxDQNAgent.update_horizon = 3 # Rainbow
JaxDQNAgent.min_replay_history = 500
JaxDQNAgent.update_period = 2 
JaxDQNAgent.target_update_period = 100

JaxRainbowAgentNew.optimizer = 'adam'
JaxRainbowAgentNew.noisy = True
JaxRainbowAgentNew.dueling = True
JaxRainbowAgentNew.initzer = 'variance_scaling'#'xavier_uniform'
JaxRainbowAgentNew.double_dqn = True
JaxRainbowAgentNew.net_conf = 'classic'
JaxRainbowAgentNew.env = 'Acrobot'
JaxRainbowAgentNew.normalize_obs = True
JaxRainbowAgentNew.hidden_layer = 2
JaxRainbowAgentNew.neurons = 512
JaxRainbowAgentNew.num_atoms = 51 # Original 51 
JaxRainbowAgentNew.vmax = 200.
JaxRainbowAgentNew.replay_scheme = 'prioritized' 
JaxRainbowAgentNew.network  = @networks_new.RainbowDQN 
JaxRainbowAgentNew.epsilon_fn = @dqn_agent.identity_epsilon

create_optimizer.learning_rate = 0.0001
create_optimizer.eps = 0.0003125
create_gym_environment.environment_name = 'Acrobot'
create_gym_environment.version = 'v1'
TrainRunner.create_environment_fn = @gym_lib.create_gym_environment

Runner.num_iterations = 30
Runner.training_steps = 1000
Runner.max_steps_per_episode = 500  # Default max episode length.

OutOfGraphPrioritizedReplayBuffer.replay_capacity = 50000
OutOfGraphPrioritizedReplayBuffer.batch_size = 128
